---

---

<div class="h-full w-full">
  <!-- Canvas untuk Lingkaran Bercahaya -->
  <canvas id="glowing-circle" class="h-full w-full"></canvas>

  <!-- Chatbox UI -->
  <!-- <div
    class="absolute bottom-10 left-1/2 z-10 w-4/5 max-w-xl -translate-x-1/2 transform rounded-lg bg-white/90 p-4 shadow-lg"
  >
    <div
      id="chat-display"
      class="h-64 overflow-y-auto rounded-md border border-gray-300 bg-gray-100 p-2"
    >

      <p class="italic text-gray-700">Start typing to interact...</p>
    </div>
    <form id="chat-form" class="mt-4 flex items-center gap-2">
      <input
        type="text"
        id="chat-input"
        placeholder="Ask me anything..."
        class="flex-grow rounded-md border border-gray-300 p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
      />
      <button
        type="submit"
        class="rounded-md bg-blue-500 px-4 py-2 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500"
      >
        Send
      </button>
    </form>
  </div> -->
</div>

<script>
  // Lingkaran bercahaya (HTML Canvas)
  const canvas = document.getElementById('glowing-circle') as HTMLCanvasElement;
  const ctx = canvas.getContext('2d');

  // Inisialisasi ukuran canvas
  const resizeCanvas = () => {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  };
  window.addEventListener('resize', resizeCanvas);
  resizeCanvas();

  // Properti lingkaran
  const circle = { x: canvas.width / 2, y: canvas.height / 2, radius: 50, angle: 0 };

  const animateCircle = () => {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Update posisi lingkaran
    circle.angle += 0.05;
    circle.x = canvas.width / 2 + Math.sin(circle.angle) * 100;
    circle.y = canvas.height / 2 + Math.cos(circle.angle) * 100;

    // Gambar lingkaran bercahaya
    const gradient = ctx.createRadialGradient(
      circle.x,
      circle.y,
      0,
      circle.x,
      circle.y,
      circle.radius
    );
    gradient.addColorStop(0, 'rgba(255, 200, 100, 1)');
    gradient.addColorStop(1, 'rgba(255, 200, 100, 0)');

    ctx.beginPath();
    ctx.arc(circle.x, circle.y, circle.radius, 0, Math.PI * 2);
    ctx.fillStyle = gradient;
    ctx.fill();

    requestAnimationFrame(animateCircle);
  };

  animateCircle();

  // Chatbox Frontend
  const chatForm = document.getElementById('chat-form');
  const chatInput = document.getElementById('chat-input') as HTMLInputElement;
  const chatDisplay = document.getElementById('chat-display');

  chatForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const userMessage = chatInput.value.trim();

    if (userMessage) {
      // Tambahkan pesan pengguna ke chat display
      const userMessageElement = document.createElement('div');
      userMessageElement.textContent = userMessage;
      userMessageElement.className = 'text-right text-blue-500 font-medium my-1';
      chatDisplay.appendChild(userMessageElement);

      // Respon placeholder
      const botResponse = document.createElement('div');
      botResponse.textContent = "I don't have a response yet, but I'm listening!";
      botResponse.className = 'text-left text-gray-700 font-medium my-1';
      chatDisplay.appendChild(botResponse);

      // Bersihkan input
      chatInput.value = '';

      // Scroll ke bawah
      chatDisplay.scrollTop = chatDisplay.scrollHeight;
    }
  });
</script>
