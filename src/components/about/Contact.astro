---
import SocialIcons from '../shared/SocialIcons.astro';

const iconData = [
  {
    socialicon: '/icon/instagram-color.svg',
    socialalt: 'Instagram Icon',
    sociallink: 'https://www.instagram.com/setografi/',
  },
  {
    socialicon: '/icon/linkedin-color.svg',
    socialalt: 'Linkedin Icon',
    sociallink: 'https://www.linkedin.com/in/setografi/',
  },
  {
    socialicon: '/icon/x-color.svg',
    socialalt: 'Twitter Icon',
    sociallink: 'https://x.com/wysmooncino/',
  },
  {
    socialicon: '/icon/readdotcv-color.svg',
    socialalt: 'Read.cv Icon',
    sociallink: 'https://read.cv/setografi',
  },
];
---

<>
  <div
    class="glassmorphism glow-shadow group relative grid w-full max-w-lg grid-flow-row overflow-hidden rounded-lg border border-accent-lavender-400/60 p-4 backdrop-blur-2xl"
  >
    <div
      class="bg-radial-gradient absolute inset-0 -z-10 scale-95 opacity-0 transition-all duration-500 ease-in-out group-hover:scale-105 group-hover:opacity-100"
    >
    </div>

    <button data-dropdown="social" class="dropdown-btn">
      <span class="font-ibmPlexsans text-base font-bold text-neutral-100"> Contact Me? </span>
    </button>

    <div
      id="dropdown-social"
      class="dropdown-content flex flex-row items-start justify-center space-x-6 overflow-hidden transition-all duration-500"
      style="max-height: 0;"
    >
      {
        iconData.map((item) => (
          <SocialIcons
            socialicon={item.socialicon}
            socialalt={item.socialalt}
            sociallink={item.sociallink}
          />
        ))
      }
    </div>
  </div>

  <script>
    let activeDropdown = null;

    document.addEventListener('DOMContentLoaded', () => {
      const buttons = document.querySelectorAll('.dropdown-btn');

      buttons.forEach((button) => {
        button.addEventListener('click', function () {
          const dropdownId = this.getAttribute('data-dropdown');
          const dropdown = document.getElementById(`dropdown-${dropdownId}`);

          if (activeDropdown === dropdown) {
            toggleDropdown(dropdown, false);
            return;
          }

          if (activeDropdown) {
            toggleDropdown(activeDropdown, false);
          }

          toggleDropdown(dropdown, true);
        });
      });
    });

    function toggleDropdown(dropdown, show = null) {
      const isHidden = dropdown.classList.contains('hidden');
      const shouldShow = show !== null ? show : isHidden;

      if (shouldShow) {
        dropdown.classList.remove('hidden');
        setTimeout(() => {
          dropdown.style.maxHeight = `${dropdown.scrollHeight}px`;
        }, 0);
        dropdown.style.opacity = '1';
        dropdown.style.transform = 'translateY(0)';
        activeDropdown = dropdown;
      } else {
        dropdown.style.maxHeight = '0px';
        dropdown.style.opacity = '0';
        dropdown.style.transform = 'translateY(-10px)';
        setTimeout(() => {
          dropdown.classList.add('hidden');
        }, 300);
        if (activeDropdown === dropdown) {
          activeDropdown = null;
        }
      }
    }
  </script>
</>
